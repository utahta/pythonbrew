--- Lib/distutils/dist.py.orig	2008-09-03 05:13:56.000000000 -0600
+++ Lib/distutils/dist.py	2008-10-03 18:33:47.000000000 -0600
@@ -60,6 +60,7 @@
                       ('quiet', 'q', "run quietly (turns verbosity off)"),
                       ('dry-run', 'n', "don't actually do anything"),
                       ('help', 'h', "show detailed help message"),
+                      ('no-user-cfg', None,'ignore pydistutils.cfg in your home directory'),
                      ]
 
     # 'common_usage' is a short (2-3 line) string describing the common
@@ -267,6 +268,12 @@
                     else:
                         sys.stderr.write(msg + "\n")
 
+        # no-user-cfg is handled before other command line args
+        # because other args override the config files, and this
+        # one is needed before we can load the config files.
+        # If attrs['script_args'] wasn't passed, assume false.
+        self.want_user_cfg = '--no-user-cfg' not in (self.script_args or [])
+
         self.finalize_options()
 
     # __init__ ()
@@ -327,6 +334,9 @@
         Distutils __inst__.py file lives), a file in the user's home
         directory named .pydistutils.cfg on Unix and pydistutils.cfg
         on Windows/Mac, and setup.cfg in the current directory.
+
+        The file in the user's home directory can be disabled with the
+        --no-user-cfg option.
         """
         files = []
         check_environ()
@@ -347,7 +357,7 @@
 
         # And look for the user config file
         user_file = os.path.join(os.path.expanduser('~'), user_filename)
-        if os.path.isfile(user_file):
+        if self.want_user_cfg and os.path.isfile(user_file):
             files.append(user_file)
 
         # All platforms support local setup.cfg
@@ -355,6 +365,8 @@
         if os.path.isfile(local_file):
             files.append(local_file)
 
+        if DEBUG:
+            print "using config files: %s" % ', '.join(files)
         return files
 
     # find_config_files ()
